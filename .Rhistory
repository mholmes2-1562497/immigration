"2009" = "2009",
"2010" = "2010"
)
),
mainPanel(
bubblesOutput("bubbles", width = "100%", height = "100%")
)
)
)
)
))
runApp()
runApp()
tabPanel("Please work",
titlePanel("Comparing returned immigrants to removed immigrants by region"),
sidebarLayout(
sidebarPanel(
selectInput(inputId= "year",
label= "Which Year",
choices = c(
"2006" = "2006",
"2007" = "2007",
"2008" = "2008",
"2009" = "2009",
"2010" = "2010"
)
),
mainPanel(
bubblesOutput("bubbles", width = "100%", height = "100%")
)
)
)
)
library(dplyr)
library(shiny)
library(plotly)
library(ggplot2)
library(markdown)
library(bubbles)
devtools::install_github("jcheng5/bubbles", force = TRUE)
#bubblesOutput(outputId, width = "600px", height = "600px")
shinyUI(navbarPage("U.S. Immigration data",
tabPanel("homepage",
titlePanel("Introduction"),
sidebarLayout(
mainPanel(
p("Immigration is such an important aspect of American life, it is an instition that affects us all. Through these tough political times,
immigration have become a crucial part of the lives of Americans - both citizens, and immigrants themeslves. The Trump administration
particularly has put a negative connotation on the word 'immigrant'; claiming that immigrants coming into the U.S. (especially from Mexico),
are contributing to the nation's most pressing issues (such as drug epidemics, loss of jobs, more crime, etc). This app is an exploration of
analyzing facts through true statistics, and seeing the effects of the current situation on countless individuals seeking the American dream.
Using data gathered from the Department of Homeland Security (DHS) and the Bureau of Justice, we have formulated a holistic study of immigration
trends in the U.S., with a specific emphasis on Mexico."
),
p("Through our research, we've found that there are different types of statuses immigrants can have. Each of which the Department of Homeland Security
had different data sets for:"
),
p(strong("Returned: "), "A returned immigrant is one who has voluntarily returned to their home country after their access into the U.S. has been denied,
or their visa expired. As a returned immigrant they waive their right to a formal proceeding, or in response to a removal proceeding."
),
p(strong("Removed: "), "A removed immigrant is one who has been determined as deportable (like a returned immigrant) but has not decided to leave the U.S.
voluntarily, meaning they could be subject to administrative penalties and may face criminal charges upon re-entry. The DHS data set
on removed immigrants includes numbers on those who did have a criminal record upon removal, and those who did not."
),
p(strong("Apprehended: "), "An apprehension is an action taken by law enforcement agency to take physical control of a person. If one individual is apprehended
more than once in one given year, it is counted twice in the data set"),
p(strong("Determined Inadmissable: "), "An immigrant may be denied access to the U.S. at a port of entry for not meeting criteria for admission. Once given this
status, they may be placed in removal proceedings or given the opportunity to withdraw their application.")
),
sidebarPanel(
helpText("here are some links to our sources:",
br(),
a("Full glossary of terms",
href = "https://www.dhs.gov/immigration-statistics/data-standards-and-definitions/definition-terms",
target = "_blank"),
br(),
a("Webpage with original datasets from DHS",
href = "https://www.dhs.gov/immigration-statistics/enforcement-actions#",
target = "_blank"),
br(),
a("DHS frequently asked questions",
href = "https://www.dhs.gov/immigration-statistics/FAQs",
target = "_blank")
)
)
)
),
tabPanel("World map",
titlePanel("Mapping removed immigrants based on criminal background"),
sidebarLayout(
sidebarPanel(
selectInput("status", "Select criminal status:",
choices = list("Criminal" = "criminal", "Non-criminal" = "noncriminal")
),
selectInput("year", "Select year:",
choices = list("2006" = 1, "2007" = 2, "2008" = 3, "2009" = 4, "2010" = 5, "2011" = 6, "2012" = 7,
"2013" = 8, "2014" = 9, "2015" = 10)
),
sliderInput("max", "Select maximum amount to display:",
min = 0, max = 100000, value = 100000
),
helpText("Helps get rid of outliers to look at more minute relationships between countries"
)
),
mainPanel(
plotlyOutput("map")
)
)
),
tabPanel("Returned vs. Removed",
titlePanel("Comparing returned immigrants to removed immigrants by region"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices=c("graph.2009", "graph.2010", "graph.2011", "graph.2012", "graph.2013", "graph.2014", "graph.2015")
)
),
mainPanel(
plotOutput("region-plot")
)
)
),
tabPanel("Please work",
titlePanel("Comparing returned immigrants to removed immigrants by region"),
sidebarLayout(
sidebarPanel(
selectInput(inputId= "year",
label= "Which Year",
choices = c(
"2006" = "2006",
"2007" = "2007",
"2008" = "2008",
"2009" = "2009",
"2010" = "2010"
)
)),
mainPanel(
bubblesOutput("bubbles", width = "100%", height = "100%")
)
)
)
))
runApp()
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
env = parent.frame()
quoted = FALSE
n<-1000
random<-1:n
ims <- filter(immigrant,Year == as.numeric(input$year))
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
#use bubbles!
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
ims <- filter(immigrant,Year == as.numeric(input$year))
ims <- filter(immigrant,Year == as.numeric(2008))
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
ims <- filter(immigrant,Year == as.numeric(input$year))
library(dplyr)
library(shiny)
library(plotly)
library(ggplot2)
library(markdown)
library(datasets)
library(bubbles)
devtools::install_github("jcheng5/bubbles", force = TRUE)
# source("information.r", local = TRUE)
# source("map-plot.r", local = TRUE)
source("usinfo.r", local = TRUE)
renderBubbles(expr, env = parent.frame(), quoted = FALSE)
shinyServer(function(input, output) {
# reactive function to determine which year data frame to use (using year.list in R file)
select.year <- reactive({
year.data <- data.frame(year.list[as.numeric(input$year)])
return(year.data)
})
output$map <- renderPlotly({
#renders a different plot based on status
if(input$status == "noncriminal") {
#filters to exlude outliers
final.data <- filter(select.year(), noncriminal < input$max)
MakeNoncrimMap(final.data)
} else {
final.data <- filter(select.year(), criminal < input$max)
MakeCrimMap(final.data)
}
})
output$bubbles <- renderBubbles({
env = parent.frame()
quoted = FALSE
n<-1000
random<-1:n
ims <- filter(immigrant,Year == as.numeric(input$year))
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
#use bubbles!
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
})
})
library(dplyr)
library(shiny)
library(plotly)
library(ggplot2)
library(markdown)
library(datasets)
library(bubbles)
devtools::install_github("jcheng5/bubbles", force = TRUE)
# source("information.r", local = TRUE)
# source("map-plot.r", local = TRUE)
source("usinfo.r", local = TRUE)
renderBubbles(expr, env = parent.frame(), quoted = FALSE)
shinyServer(function(input, output) {
# reactive function to determine which year data frame to use (using year.list in R file)
select.year <- reactive({
year.data <- data.frame(year.list[as.numeric(input$year)])
return(year.data)
})
output$map <- renderPlotly({
#renders a different plot based on status
if(input$status == "noncriminal") {
#filters to exlude outliers
final.data <- filter(select.year(), noncriminal < input$max)
MakeNoncrimMap(final.data)
} else {
final.data <- filter(select.year(), criminal < input$max)
MakeCrimMap(final.data)
}
})
output$bubbles <- renderBubbles({
env = parent.frame()
quoted = FALSE
n<-1000
random<-1:n
ims <- filter(immigrant,Year == as.numeric(input$year))
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
#use bubbles!
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = 3, label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
})
})
runApp()
View(ims)
library(dplyr)
library(shiny)
library(plotly)
library(ggplot2)
library(markdown)
library(datasets)
library(bubbles)
devtools::install_github("jcheng5/bubbles", force = TRUE)
# source("information.r", local = TRUE)
# source("map-plot.r", local = TRUE)
source("usinfo.r", local = TRUE)
renderBubbles(expr, env = parent.frame(), quoted = FALSE)
shinyServer(function(input, output) {
# reactive function to determine which year data frame to use (using year.list in R file)
select.year <- reactive({
year.data <- data.frame(year.list[as.numeric(input$year)])
return(year.data)
})
output$map <- renderPlotly({
#renders a different plot based on status
if(input$status == "noncriminal") {
#filters to exlude outliers
final.data <- filter(select.year(), noncriminal < input$max)
MakeNoncrimMap(final.data)
} else {
final.data <- filter(select.year(), criminal < input$max)
MakeCrimMap(final.data)
}
})
output$bubbles <- renderBubbles({
env = parent.frame()
quoted = FALSE
n<-1000
random<-1:n
ims <- filter(immigrant,Year == as.numeric(input$year))
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
#use bubbles!
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = 3, label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
})
})
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
runApp()
runApp()
bar.it(2010)
shinyUI(navbarPage("U.S. Immigration data",
tabPanel("homepage",
titlePanel("Introduction"),
sidebarLayout(
mainPanel(
p("Immigration is such an important aspect of American life, it is an instition that affects us all. Through these tough political times,
immigration have become a crucial part of the lives of Americans - both citizens, and immigrants themeslves. The Trump administration
particularly has put a negative connotation on the word 'immigrant'; claiming that immigrants coming into the U.S. (especially from Mexico),
are contributing to the nation's most pressing issues (such as drug epidemics, loss of jobs, more crime, etc). This app is an exploration of
analyzing facts through true statistics, and seeing the effects of the current situation on countless individuals seeking the American dream.
Using data gathered from the Department of Homeland Security (DHS) and the Bureau of Justice, we have formulated a holistic study of immigration
trends in the U.S., with a specific emphasis on Mexico."
),
p("Through our research, we've found that there are different types of statuses immigrants can have. Each of which the Department of Homeland Security
had different data sets for:"
),
p(strong("Returned: "), "A returned immigrant is one who has voluntarily returned to their home country after their access into the U.S. has been denied,
or their visa expired. As a returned immigrant they waive their right to a formal proceeding, or in response to a removal proceeding."
),
p(strong("Removed: "), "A removed immigrant is one who has been determined as deportable (like a returned immigrant) but has not decided to leave the U.S.
voluntarily, meaning they could be subject to administrative penalties and may face criminal charges upon re-entry. The DHS data set
on removed immigrants includes numbers on those who did have a criminal record upon removal, and those who did not."
),
p(strong("Apprehended: "), "An apprehension is an action taken by law enforcement agency to take physical control of a person. If one individual is apprehended
more than once in one given year, it is counted twice in the data set"),
p(strong("Determined Inadmissable: "), "An immigrant may be denied access to the U.S. at a port of entry for not meeting criteria for admission. Once given this
status, they may be placed in removal proceedings or given the opportunity to withdraw their application.")
),
sidebarPanel(
helpText("here are some links to our sources:",
br(),
a("Full glossary of terms",
href = "https://www.dhs.gov/immigration-statistics/data-standards-and-definitions/definition-terms",
target = "_blank"),
br(),
a("Webpage with original datasets from DHS",
href = "https://www.dhs.gov/immigration-statistics/enforcement-actions#",
target = "_blank"),
br(),
a("DHS frequently asked questions",
href = "https://www.dhs.gov/immigration-statistics/FAQs",
target = "_blank")
)
)
)
),
tabPanel("World map",
titlePanel("Mapping removed immigrants based on criminal background"),
sidebarLayout(
sidebarPanel(
selectInput("status", "Select criminal status:",
choices = list("Criminal" = "criminal", "Non-criminal" = "noncriminal")
),
selectInput("year", "Select year:",
choices = list("2006" = 1, "2007" = 2, "2008" = 3, "2009" = 4, "2010" = 5, "2011" = 6, "2012" = 7,
"2013" = 8, "2014" = 9, "2015" = 10)
),
sliderInput("max", "Select maximum amount to display:",
min = 0, max = 100000, value = 100000
),
helpText("Helps get rid of outliers to look at more minute relationships between countries"
)
),
mainPanel(
plotlyOutput("map")
)
)
),
tabPanel("Returned vs. Removed",
titlePanel("Comparing returned immigrants to removed immigrants by region"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "dataset",
label = "Choose a dataset:",
choices=c("graph.2009", "graph.2010", "graph.2011", "graph.2012", "graph.2013", "graph.2014", "graph.2015")
)
),
mainPanel(
plotOutput("region-plot")
)
)
),
tabPanel("Please work",
titlePanel("Comparing returned immigrants to removed immigrants by region"),
sidebarLayout(
sidebarPanel(
selectInput(inputId= "year",
label= "Which Year",
choices = c(
"2006" = "2006",
"2007" = "2007",
"2008" = "2008",
"2009" = "2009",
"2010" = "2010"
)
)),
mainPanel(s
bubblesOutput("bubbles", width = "100%", height = "100%")
)
)
)
))
bar.it(2006)
library(dplyr)
library(tidyr)
library(shiny)
library(plotly)
library(ggplot2)
library(markdown)
devtools::install_github("jcheng5/bubbles")
library(bubbles)
setwd("~/Info201/immigration")
removed <- read.csv("data/removed.csv", stringsAsFactors = FALSE)
removed <- removed[3:13,2:16 ]
#Get the right amount of Apprehended data
apprehended <- read.csv("data/apprehended.csv", stringsAsFactors = FALSE)
apprehended <- apprehended[3:5, 2:6 ]
colnames(apprehended) <- c("2006","2007","2008","2009","2010")
apprehended <- apprehended[-c(2), ]
apprehended <- gather(apprehended,"Year", "Apprehended",1:5)
apprehended <- apprehended[-c(1,3,5,7,9), ]
#Same with Immigrant
immigrant <- read.csv("data/us.immigrant.csv", stringsAsFactors = FALSE)
cols <- c("Year","Drug","Immigration","Other")
colnames(immigrant) <- cols
immigrant <- immigrant[31:35, ]
#Join together to plot later
immigrant <- full_join(immigrant,apprehended)
#Get rid of commas in the values
immigrant$Drug<-as.numeric(gsub(",", "", immigrant$Drug))
immigrant$Immigration<-as.numeric(gsub(",", "", immigrant$Immigration))
immigrant$Other<-as.numeric(gsub(",", "", immigrant$Other))
immigrant$Apprehended<-as.numeric(gsub(",", "", immigrant$Apprehended))
#Create extra tables based on the data
immigrant <- mutate(immigrant,Total = Drug+Immigration)
immigrant <- mutate(immigrant,Ratio = Total/Apprehended)
#Present graph
main.plot <- ggplot(data = immigrant)+
geom_line(mapping = aes(x= Year, y= Ratio, group=1))+
ggtitle("Percentage of People who are Arrested/Apprehended")
#Call above graph and use this function at the bottom
bar.it <- function(year){
year <- as.numeric(year)
#How big youd want the bubble graph to be
n<-1000
random<-1:n
ims <- filter(immigrant,Year == year)
ims<- gather(ims,"Reason","Amount", 1:7) %>%
filter(Reason == "Ratio")
ratio<- as.numeric(ims$Amount)*n
sample <- sample(random,ratio)
#use bubbles!
bubble.frame <- data.frame(random,0)
colnames(bubble.frame) <- c("Set", "Hit")
bubble.frame$Hit <- "green"
bubble.frame$Hit[sample] <- "blue"
bubbles(value = sample(10), label=" ", key = , tooltip = "One out of A Thousand", color = bubble.frame$Hit,
textColor = "#333333", width = NULL, height = NULL)
}
# bubblesOutput(outputId, width = "600px", height = "600px")
#
# renderBubbles(expr, env = parent.frame(), quoted = FALSE)
#
main.plot
bar.it(2006)
main.plot
bar.it(2008)
bar
2009
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
bar.it(2009)
